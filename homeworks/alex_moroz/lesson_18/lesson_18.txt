Клиент-серверная архитектура в PHP
Понятие запрос - ответ, клиент - сервер
Структура HTTP протокола: заголовок, тело, форматы передачи данных
Работа с HTTP протоколом в контексте языка PHP. Функция header
Глобальная переменная $_SERVER

Клиент-серверная архитектура в PHP
Чем выступает клиент (самый популярный клиент): веб-браузер, мобильный-браузер, приложение
Сервер: подключенный к сети компьютер, на котором располагается сайт (совокупность электронных документов, которые обеспечивают его работу)

Составляющие сервера: веб-клиент, например nginx (принимает запросы и перенаправляет запросы) и интерпретатор, выполняющий код (php-интерпретатор) (бд не обязательная часть сайта)

HTTP-запрос - структурурованное тело запроса для общения Client-Server (файл, который парсит веб-клиент сервет  и передает файл выполнения интерпретатору)
Header - описывает сам запрос и его характеристики (ключ:значение)
Типы запросов: GET, POST, HEAD, PUT, PATCH, DELETE
Статусы ответа: 200 - все ок, 201 - created, 300 - перенаправление (обычно адрес перенаправления указывается в заголовке ответа в Location), 400 - ошибка на клиенте, 500 - ошибка на сервере


Параметры передаются в строке или в теле запроса.
$_GET - возвращает массив параметров, переданных в строке запроса; не вернет данные переданные в теле GET запроса $_GET['parameter_key']
$_POST - возвращает массив параметров, переданных в теле запроса; не вернет данные переданные в строке POST запроса
$_REQUEST - универсальный

HTTP и HTTPS (SSL, TLS - сертификаты кодирования; Client и Server имеют ключи расшифровки)

.htaccess - файл, отвечает за настройки сервера, как будут обрабатываться (установка заголовков, кеширование например), редирект.

на index.php - если не указано иное

роут - маршрут по папкам
[host]
[headers]
[body]
// header д.б. вызвана до вывода верстки, для избежания ошибок
//header("location: ../company"); // относительный путь
header("location: /hw_wd15onl/WD15-onl/homeworks/alex_moroz/lesson_18/about/company/"); //лучший вариант - полный путь
http_response_code(301);

//Api - aplication programm interface - описание взаимодействия клиента с сервером

header('Content-Type: application/json; charset=utf-8' location: адрес_редиректа); для redirect location: адрес_редиректа //устанавливает заголовки ответов сервера
http_response_code($result['status']); // устанавливает статус ответа

$_REQUEST; //Ассоциативный массив (array), который по умолчанию содержит данные переменных $_GET, $_POST и $_COOKIE.
switch($_SERVER['REQUEST_METHOD'])
{
case 'GET': $the_request = &$_GET; break;
case 'POST': $the_request = &$_POST; break;
}

$method = $_GET['method'];

http_response_code($result['status']);
echo json_encode($result);

die; // or exit(); для прерывания выполнения скрипта.

//код ниже выполнен не будет
echo "jhgjsdjsgjghdgajhg";


$_SERVER; //заголовки запроса $_SERVER - это массив (array), содержащий такую информацию, как заголовки,
пути и местоположения скриптов. Записи в этом массиве создаются веб-сервером, поэтому нет гарантии,
что каждый веб-сервер будет предоставлять любую из этих переменных; серверы могут опускать некоторые из них или предоставлять другие, не указанные здесь.


'SERVER_ADDR'
IP-адрес сервера, на котором выполняется текущий скрипт.
'SERVER_NAME'
Имя хоста, на котором выполняется текущий скрипт. Если скрипт выполняется на виртуальном хосте, здесь будет содержатся имя, определённое для этого виртуального хоста.
'SERVER_SOFTWARE'
Строка идентификации сервера, указанная в заголовках, когда происходит ответ на запрос.
'SERVER_PROTOCOL'
Имя и версия информационного протокола, через который была запрошена страница; к примеру 'HTTP/1.0';
'REQUEST_METHOD'
Какой метод был использован для запроса страницы; к примеру 'GET', 'HEAD', 'POST', 'PUT'.
'REQUEST_TIME'
Временная метка начала запроса.
'REQUEST_TIME_FLOAT'
Временная метка начала запроса с точностью до микросекунд.
'QUERY_STRING'
Строка запроса, если есть, через которую была открыта страница.
'DOCUMENT_ROOT'
Директория корня документов, в которой выполняется текущий скрипт, в точности та, которая указана в конфигурационном файле сервера.
'HTTPS'
Принимает непустое значение, если запрос был произведён через протокол HTTPS.
'REMOTE_ADDR'
IP-адрес, с которого пользователь просматривает текущую страницу.
'REMOTE_HOST'
Удалённый хост, с которого пользователь просматривает текущую страницу. Обратный поиск DNS основан на значении переменной REMOTE_ADDR.
