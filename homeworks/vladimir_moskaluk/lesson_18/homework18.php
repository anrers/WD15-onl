<?php
//if
//1) Напишите программу, которая выводит на экран сообщение в
//зависимости от возраста пользователя:

$age = 20;

if ($age < 18) {
    echo "Вы несовершеннолетний";
} elseif ($age >= 18 && $age <= 65) {
    echo "Вы взрослый";
} else {
    echo "Вы пенсионер";
}

//2) Напишите программу, которая проверяет, является ли введенное
//пользователем число четным или нечетным, и выводит соответствующее
//сообщение:

$number = 7;

if ($number % 2 == 0) {
    echo "Число является четным";
} else {
    echo "Число является нечетным";
}


//switch
//1) Напишите программу, которая выводит на экран сообщение в
//зависимости от значения переменной $dayOfWeek (от 1 до 7), которая
//содержит номер дня недели.
$dayOfWeek = 3;

switch ($dayOfWeek) {
    case 1:
        echo "Понедельник";
        break;
    case 2:
        echo "Вторник";
        break;
    case 3:
        echo "Среда";
        break;
    case 4:
        echo "Четверг";
        break;
    case 5:
        echo "Пятница";
        break;
    case 6:
        echo "Суббота";
        break;
    case 7:
        echo "Воскресенье";
        break;
    default:
        echo "Неверный номер дня недели";
}

//2) Напишите программу, которая определяет количество дней в месяце в
//зависимости от значения переменной $month (от 1 до 12), которая
//содержит номер месяца:
//Если $month равно 2, выведите "В этом месяце 28 дней"
//Если $month равно 4, 6, 9 или 11, выведите "В этом месяце 30 дней"
//Во всех остальных случаях выведите "В этом месяце 31 день

$month = 4;

switch ($month) {
    case 2:
        echo "В этом месяце 28 дней";
        break;
    case 4:
    case 6:
    case 9:
    case 11:
        echo "В этом месяце 30 дней";
        break;
    default:
        echo "В этом месяце 31 день";
}


//Match
//1) Напишите программу, которая принимает на вход строку, и определяет,
//является ли она палиндромом (т.е. читается одинаково в обоих
//направлениях), используя конструкцию match и функцию strrev:
//$string = "level";

/*Вариант 1. Из-за новой версии PHP match подчеркивается красным, т.к.
 ожидает сравнения с конкретными значениями или условиями и не поддерживает
сравнение булевых выражений напрямую, как это происходит в if
*/

/*$string = "level";
$reversString = strrev($string);

$result = match ($string === $reversString) {
    true => "Это палиндром",
    false => "Это не палиндром"

echo $result;
};*/

// Вариант 2.  Сделал с явным сравнением булевых значений,
// однако и тут подчеркивается красным:

/*$string = "level";
$reversString = strrev($string);

$result = match (true) {
    $string === $reversString => "Это палиндром",
    default => "Это не палиндром"
};

echo $result;*/

//Вариант 3. Который подходит версии PHP, но нарушает условие задачи.
$string = "level"; // Пример строки
$reversString = strrev($string);

if ($string === $reversString) {
    echo "Это палиндром";
} else {
    echo "Это не палиндром";
}

//2) Напишите программу, которая принимает на вход число, и определяет,
//является ли оно четным, кратным 3 или кратным 5, используя
//конструкцию match:

//тут не подстравивался под версию PHP, поэтому match и подчеркивается красным
$number = 15;

$result = match (true) {
    $number % 3 === 0 && $number % 5 === 0 => "Кратно 3 и 5", //Проверка на случай когда число
    $number % 2 === 0 => "Четное число",                     // кратно 3 и 5 (например 15).
    $number % 3 === 0 => "Кратно 3",                         //Порядок условий важен, т.к. match
    $number % 5 === 0 => "Кратно 5",                         // завершает выполнение при первом совпадении.
    default => "Не подходит",                               // Если бы проверки не было выдал бы ответ Кратно 3.
};

echo $result;

//while
//1) Задача на поиск суммы нечетных чисел от 1 до N:
//$num = 10;
//$sum = 0;
//$i = 1;

$num = 10;
$sum = 0;
$i = 1;

while ($i <= $num) {
    if ($i % 2 != 0) {
        $sum += $i;
    }
    $i++;
}
echo "Сумма нечетных чисел: $sum";


//2) Задача на поиск первого положительного числа, кратного 7:
//$i = 1;
//while (true) {
//}

$i = 1;

while (true) {
    if ($i % 7 == 0) {
        echo "Первое положительное число, кратное 7: $i";
        break;
    }
    $i++;
}

//for
//1) Поиск суммы элементов массива:
//$numbers = [1, 2, 3, 4, 5];
//$sum = 0;
$numbers = [1, 2, 3, 4, 5];
$sum = 0;

for ($i = 0; $i < count($numbers); $i++) {
    $sum += $numbers[$i];
}
echo "Сумма элементов массива: $sum";

//2) Собрать массив четных чисел из входного массива:
//$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
// = [];
$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
$evenNumbers = [];

for ($i = 0; $i < count($numbers); $i++) {
    if ($numbers[$i] % 2 == 0) {
        $evenNumbers[] = $numbers[$i];
    }
}
print_r($evenNumbers);

//foreach
//   1) Добавить новый элемент в ассоциативный массив и вывести все
//значения данного массива
$assocArray = ["name" => "Alice", "age" => 25];
$assocArray["city"] = "Minsk";

foreach ($assocArray as $key => $value) {
    echo "$key: $value\n";
}

//2) Объединить нескольких ассоциативных массивов в один и вывести
//результат (ключ, значение), через foreach
$array1 = ["name" => "Alice", "age" => 25];
$array2 = ["city" => "Minsk", "country" => "Belarus"];
$mergedArray = array_merge($array1, $array2);

foreach ($mergedArray as $key => $value) {
    echo "$key: $value\n";
}